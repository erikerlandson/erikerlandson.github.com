<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: constraints | tool monkey]]></title>
  <link href="http://erikerlandson.github.com/blog/categories/constraints/atom.xml" rel="self"/>
  <link href="http://erikerlandson.github.com/"/>
  <updated>2019-01-04T07:57:28-07:00</updated>
  <id>http://erikerlandson.github.com/</id>
  <author>
    <name><![CDATA[Erik Erlandson]]></name>
    <email><![CDATA[erikerlandson@yahoo.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Equality Constraints for Cubic B-Splines]]></title>
    <link href="http://erikerlandson.github.com/blog/2018/09/08/equality-constraints-for-cubic-b-splines/"/>
    <updated>2018-09-08T14:32:00-07:00</updated>
    <id>http://erikerlandson.github.com/blog/2018/09/08/equality-constraints-for-cubic-b-splines</id>
    <content type="html"><![CDATA[<p>In my <a href="http://erikerlandson.github.io/blog/2018/09/02/putting-cubic-b-splines-into-standard-polynomial-form/">previous post</a>
I derived the standard-form polynomial coefficients for cubic B-splines.
As part of the <a href="https://github.com/erikerlandson/snowball">same project</a>,
I also need to add a feature that allows the library user to declare equality constraints of the form <nobr>(x,y)</nobr>,
where <nobr>S(x) = y</nobr>. Under the hood, I am invoking a <a href="https://github.com/erikerlandson/gibbous">convex optimization</a> library, and so I need to convert these
user inputs to a linear equation form that is consumable by the optimizer.</p>

<p>I expected this to be tricky, but it turns out I did most of the work <a href="http://erikerlandson.github.io/blog/2018/09/02/putting-cubic-b-splines-into-standard-polynomial-form/">already</a>.
I can take one of my previously-derived expressions for S(x) and put it into a form that gives me coefficients for the four contributing knot points <nobr>K<sub>j-3</sub> ... K<sub>j</sub></nobr>:</p>

<p><img src="/assets/images/bspline/ybblhxfw.png" alt="eq" /></p>

<p>Recall that by the convention from my previous post, <nobr>K<sub>j</sub></nobr> is the largest knot point that is <nobr>&lt;= x</nobr>.</p>

<p>My linear constraint equation is with respect to the vector I am solving for, in particular vector (τ), and so the
equation above yields the following:</p>

<p><img src="/assets/images/bspline/y7jhvnmk.png" alt="eq" /></p>

<p>In this form, it is easy to add into a <a href="https://github.com/erikerlandson/gibbous">convex optimization</a> problem as a linear equality constraint.</p>

<p>Gradient constraints are another common equality constraint in convex optimization, and so I can apply very similar logic to get coefficient values corresponding to the gradient of S:</p>

<p><img src="/assets/images/bspline/yd5fxmwk.png" alt="eq" /></p>

<p>And so my linear equality constraint with respect to (τ) in this case is:</p>

<p><img src="/assets/images/bspline/yalk3puu.png" alt="eq" /></p>

<p>And that gives me the tools I need to let my users supply additional equality constraints as simple <nobr>(x,y)</nobr> pairs, and translate them into a form that can be consumed by convex optimization routines. Happy Computing!</p>
]]></content>
  </entry>
  
</feed>
